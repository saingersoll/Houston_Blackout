---
title: "Assessing the Residential Impact of February 2021 Blackouts in Houston, Texas"
description: "Explore the aftermath of the February 2021 blackouts in Houston, Texas, as we delve into the impact on residential properties. This documentation provides insights into the extent of disruption experienced by homes during the blackout period, shedding light on the disproportionate challenges faced by residents, particularly in relation to median income levels."
author: Sofia Ingersoll
date: "2023-12-14"
format:
  html:
    code-fold: true
    code-summary: "Show the code"
embed-resources: true
output:
    html_document:
      print_df: paged
      toc: yes
      toc_depth: 4
      toc_float: yes
categories: [Geospatial Analysis, Power Outage]
---

```{r echo = FALSE, message = FALSE, warning = FALSE}
library(here)
#knitr::include_graphics(here("posts/2023-12-14-HoustonBlackout/medincome.png"))

```

# Exploring the Extent of Houston, TX Blackout

## Shedding Light on the Disproportionate Challenges Residents Faced, Particularly in Relation to Median Income Levels

Throughout the month of February in 2021, the state of Texas suffered a major power crisis, which came about as a result of three severe winter storms sweeping across the United States on February 10--11, 13--17, and 15--20."[^1] For more background, check out these [engineering](https://www.youtube.com/watch?v=08mwXICY4JM&ab_channel=PracticalEngineering) and [political](https://www.youtube.com/watch?v=Zcrsgdl_hP0&ab_channel=Vox) perspectives. For this project, we will estimate the number of homes in Houston that lost power as a result of the first two storms and investigate if socioeconomic factors are predictors of communities recovery from a power outage. Our analysis will be based on remotely-sensed night lights data, acquired from the [Visible Infrared Imaging Radiometer Suite (VIIRS)](https://en.wikipedia.org/wiki/Visible_Infrared_Imaging_Radiometer_Suite) onboard the Suomi satellite. In particular, we will use the VNP46A1 to detect differences in night lights before and after the storm to identify areas that lost electric power. To determine the number of homes that lost power, we will link (spatially join) these areas with [OpenStreetMap](https://www.openstreetmap.org/#map=4/38.01/-95.84) data on buildings and roads. By linking our analysis with data from the US Census Bureau we can investigate the potential socioeconomic factors that influenced recovery.

[^1]: Wikipedia. 2021. "2021 Texas power crisis." Last modified October 2, 2021. <https://en.wikipedia.org/wiki/2021_Texas_power_crisis>.

#### Visualizing the Data
The following code is a walk through of how I developed the three visualizations included in the infographic created in Canva above. I would like to note that this is an early rendition of this infographic. I plan on expanding this personal project to investigate the water management district boundaries and evaluate the different types policies in place, or lack there of, that could be potential drivers of lower nutrient levels in estuaries.

## Set up

```{r message=FALSE}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                            establish enva                                ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# set default chunk options
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)

library(sf)
library(tmap)
library(here)
library(terra)
library(stars)
library(ggtext)
library(raster)
library(leaflet)
library(cowplot)
library(treemap)
library(showtext)
library(patchwork)
library(tidyverse)
library(sunburstR)
library(tmaptools)
```

## Load Data

#### Night Lights

We'll be using NASA's Worldview to explore the data around the day of the storm. There are several days with too much cloud cover to be useful, but 2021-02-07 and 2021-02-16 provide two clear, contrasting images to visualize the extent of the power outage in Texas.

VIIRS data is distributed through NASA's [Level-1 and Atmospheric Archive & Distribution System Distributed Active Archive Center (LAADS DAAC)](https://ladsweb.modaps.eosdis.nasa.gov/). Many NASA Earth data products are distributed in 10x10 degree tiles in sinusoidal equal-area projection. Tiles are identified by their horizontal and vertical position in the grid. Houston lies on the border of tiles h08v05 and h08v06. We therefore need to download two tiles per date.

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                import data                               ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Reading in the night light tif files
VIIRS_05_07 <- read_stars("../data/houston/VNP46A1/VNP46A1.A2021038.h08v05.001.2021039064328.tif")
VIIRS_06_07 <- read_stars("../data/houston/VNP46A1/VNP46A1.A2021038.h08v06.001.2021039064329.tif")
VIIRS_05_16 <- read_stars("../data/houston/VNP46A1/VNP46A1.A2021047.h08v05.001.2021048091106.tif")
VIIRS_06_16 <- read_stars("../data/houston/VNP46A1/VNP46A1.A2021047.h08v06.001.2021048091105.tif")
```

#### Highways

Typically highways account for a large portion of the night lights observable from space (see Google's [Earth at Night](https://earth.google.com/web/@27.44405464,-84.7693044,206.63660162a,8916361.52264659d,35y,0h,0t,0r/data=CiQSIhIgMGY3ZTJkYzdlOGExMTFlNjk5MGQ2ZjgxOGQ2OWE2ZTc)). To minimize falsely identifying areas with reduced traffic as areas without power, we will ignore areas near highways.

[OpenStreetMap (OSM)](https://planet.openstreetmap.org/) is a collaborative project which creates publicly available geographic data of the world. Ingesting this data into a database where it can be subsetted and processed is a large undertaking. Fortunately, third party companies redistribute OSM data. We used [Geofabrik's download sites](https://download.geofabrik.de/) to retrieve a shapefile of all highways in Texas and prepared a Geopackage (`.gpkg` file) containing just the subset of roads that intersect the Houston metropolitan area.Â 

-   `gis_osm_roads_free_1.gpkg`

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                import data                               ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# SQL query to aid in the data loading process
query <- "SELECT* FROM gis_osm_roads_free_1 WHERE fclass='motorway'"

# Loading in the data with the SQL query
highways <- st_read("../data/houston/gis_osm_roads_free_1.gpkg",
                    query = query,
                    quiet = TRUE)

# Re-projecting CRS
highways <- highways %>% 
  st_transform(3083) %>% 
  st_make_valid(highways)
```

#### Buildings

We can also obtain building data from OpenStreetMap. We downloaded from Geofabrick and prepared a GeoPackage containing only houses in the Houston metropolitan area.

-   `gis_osm_buildings_a_free_1.gpkg`

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                import data                               ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# SQL Query to aid in data loading process
building_query <- "SELECT*
FROM gis_osm_buildings_a_free_1
WHERE (type IS NULL AND name IS NULL)
OR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')"

# Loading in the building data with the query
buildings <- st_read("../data/houston/gis_osm_buildings_a_free_1.gpkg",
                     query = building_query,
                     quiet = TRUE)
```

#### Census

We cannot readily get socioeconomic information for every home, so instead we obtained data from the [U.S. Census Bureau's American Community Survey](https://www.census.gov/programs-surveys/acs) for census tracts in 2019. The *folder* `ACS_2019_5YR_TRACT_48.gdb` is an ArcGIS ["file geodatabase"](https://desktop.arcgis.com/en/arcmap/latest/manage-data/administer-file-gdbs/file-geodatabases.htm), a multi-file proprietary format that's roughly analogous to a GeoPackage file.

The geodatabase contains a layer holding the geometry information, separate from the layers holding the ACS attributes. You have to combine the geometry with the attributes to get a feature layer that `sf` can use.

Using `st_read()` to load the geodatabase layers and `st_layers()` to explore the contents of the geodatabase. Each layer contains a subset of the fields documents in the [ACS metadata](https://www2.census.gov/geo/docs/maps-data/data/tiger/prejoined/ACSMetadata2011.txt). Geometries are stored in the `ACS_2019_5YR_TRACT_48_TEXAS` layer, income data is stored in the `X19_INCOME` layer, and the median income field `B19013e1.`

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                import data                               ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Loading geometry data
socioeconomic <- st_read("../data/houston/ACS_2019_5YR_TRACT_48_TEXAS.gdb", layer = "ACS_2019_5YR_TRACT_48_TEXAS",
                         quiet = TRUE)  

# Loading income data and renaming the columns
income <- st_read("../data/houston/ACS_2019_5YR_TRACT_48_TEXAS.gdb", layer = "X19_INCOME",
                  quiet = TRUE) %>%
  dplyr::select(GEOID, B19013e1) %>% 
  rename(GEOID_Data = GEOID,
         median_income = B19013e1)
```

## Wrangling & Subsetting

#### Night Lights

```{r warning = FALSE}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                              wrangle data                                ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----          combine tiles          ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Combining tiles for each date as a stars object
feb_07 <- st_mosaic(VIIRS_05_07, VIIRS_06_07)
feb_16 <- st_mosaic(VIIRS_05_16, VIIRS_06_16)


##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----           make a mask           ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Creating a mask to identify locations that experienced a drop greater than 200 nW cm-2sr-1
blackout_locations <- (feb_07 - feb_16) > 200

# Assigning non-blackout locations to be NA values
blackout_locations[blackout_locations == FALSE] <- NA


##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----          vectorize  mask        ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Transforming the mask into a vector and fixing improper geometries
vector_blackout_locations <- st_as_sf(blackout_locations) %>% 
  st_make_valid()


##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----            crop for AOI         ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Defining the Area of Interest
houston <- st_polygon(list(rbind(c(-96.5, 29),
                                 c(-96.5, 30.5),
                                 c(-94.5, 30.5),
                                 c(-96.5, 29))))

# Creating a sfc and assigning the CRS to match the vector blackout data
houston <- st_sfc(houston) %>% 
  st_set_crs(4326) %>% 
  st_make_valid()

# cropping blackout locations to the houston dimensions
houston_blackout_mask <- st_crop(vector_blackout_locations, houston)

# Re-projecting to match the maps
houston_blackout_mask <- houston_blackout_mask %>% 
  st_transform(3083) %>% 
  st_make_valid()
```

#### Highways

```{r warning = FALSE}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                              wrangle data                                ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----          create buffer          ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Creating a 200 m buffer and dissolving it as a single object
highway_buffer <- st_buffer(highways, dist = 200) 

# combines the geometries within the buffer as one geometric polygon
highway_buffer <- st_union(highway_buffer)

# identifying homes boardering the buffer and beyond the buffer
houston_blackout_highways <- st_difference(houston_blackout_mask, highway_buffer)
```

#### Buildings

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                              wrangle data                                ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----          CRS Correction         ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Re-projecting the dataset to match map
buildings <- buildings %>%
  st_transform('EPSG:3083')

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----      isolate affected areas     ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Filtering for homes beyond the buffer zone affected by the blackouts
houston_blackout_homes <- st_join(buildings, houston_blackout_highways,
                                  .predicate = st_intersects)

# the number of homes impacted was displayed as 487405
#nrow(houston_blackout_homes)
```

#### Census

```{r warning=FALSE}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                              wrangle data                                ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----           combo for AOI         ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Combining the data for area of interest
census_income <- left_join(socioeconomic, income, by = "GEOID_Data") %>%
  st_transform('EPSG:3083') 

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----          CRS Correction         ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Re=projecting CRS
houston <- houston %>% 
  st_transform(3083)


##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----            crop for AOI         ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Cropping the data 
houston_income <- st_crop(census_income, houston)

# Census tracts that experienced blackout
blackout_census <- houston_blackout_homes[houston_income,] %>% 
  mutate(blackout = 'yes')

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----           combo for AOI         ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Combining Cropped datums
houston_blackout_combined <- st_join(houston_income, blackout_census, left = TRUE)
```

## Affected Areas 

Creating final combined subsets

```{r warning=FALSE}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                           data for mapping                               ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----      isolate affected areas     ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# identifying homes boardering the buffer and beyond the buffer
houston_blackout_highways <- st_difference(houston_blackout_mask, highway_buffer)


##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----   identifying unimpacted areas  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Additional check to track impact of blackout
houston_blackout_combined$VNP46A1.A2021038.h08v05.001.2021039064328.tif[is.na(houston_blackout_combined$VNP46A1.A2021038.h08v05.001.2021039064328.tif)] <- "FALSE"

# labels unaffected areas
houston_blackout_combined$blackout[is.na(houston_blackout_combined$blackout)] <- "no"

# isolates unaffected areas into data subset
no_blackout <- st_as_sf(houston_blackout_combined[!grepl("yes",houston_blackout_combined$blackout),])


##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----        categorizing areas       ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Tracking blackouts
trac_with_blackout <- houston_blackout_combined%>%
  filter(houston_blackout_combined$VNP46A1.A2021038.h08v05.001.2021039064328.tif == TRUE)

# Tracking no blackouts
trac_without_blackout <- houston_blackout_combined%>%
  filter(houston_blackout_combined$VNP46A1.A2021038.h08v05.001.2021039064328.tif == FALSE)
```

## Customs

#### Text

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----                        create plot labels                            ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----          violin labels          ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
v_title <- "Median Income Brackets Based on Local Median"
v_subtitle <- "Homes in Houston, TX Affected by Blackouts"
v_alt <- "This is a violin plot of homes impacted by the Houston, TX blackouts (2/21), the median income of the households affected separated into quantiles. A trend of increased blackouts were experienced by individuals earning a median income of less than or equal to 100 thousand dollars."


##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----            map labels           ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
m_title <- "Homes in Houston Affected by Blackouts, Median Income"
#m_subtitle <- "Identifying <span style='color:#34A0A4;'>**Oligotrophic**</span> Estuaries"
m_legend <- "Median Income"
m_alt <- "This is a map of the homes within Houston, TX that experienced a blackout. The census tracts are colored based on median income quantiles. There is a wide spread distribution of areas that were impacted. The greatest regions that experienced a blackout were in the 25th and 50th percentiles."
```

#### Typeface

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----                        plot customizations                           ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----              fonts              ----  
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# enable {showtext} for rendering 
showtext_auto()
# import fonts 
font_add_google(name = "Josefin Sans", family = "josefin")
font_add_google(name = "Sen", family = "sen")
```

## Visuals

### Figure 1: Understanding Demographics Affected

```{r fig.width=14, fig.height=8}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----                      wrangle ploting data                           ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----         subset & group          ----  
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# subset data for plotting
violin_data <- trac_with_blackout %>% 
  select(median_income, Shape) %>% 
  na.omit(median_income) %>% 
  mutate(
    earning_group = case_when(
      median_income <= 50000  ~ "Low-income",
      median_income <= 75000  ~ "Middle-income",
      median_income <= 100000 ~ "Upper-middle-income",
      median_income <= 150000 ~ "Upper-income",
      median_income <= 200000 ~ "Exceptionally High-income"
    )
  ) %>% 
  na.omit(earning_group)

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----         factor relevel          ----  
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Reorder factor levels from low to exceptionally high
violin_data$earning_group <- fct_relevel(violin_data$earning_group, 
                                         "Low-income", "Middle-income", 
                                         "Upper-middle-income", "Upper-income",
                                         "Exceptionally High-income")

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----                          violin  plot                                ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ggplot(violin_data, aes(x = rev(factor(earning_group)), y = median_income)) + 
  
  geom_violin(aes(fill = factor(rev(earning_group)))) +  
  geom_boxplot(width = 0.2,
               size = 0.3,
               alpha = 0.5) +
  scale_fill_viridis_d(option = "magma", name = "Median Income Percentile Group") +
  
  labs(
    x = "Percentile Group",
    y = "Median Income ($)",
    title = v_title,
    subtitle = v_subtitle,
    alt = v_alt
  ) +
  
  scale_y_continuous(labels = scales::dollar_format()) +
  
  theme_classic() +
  
  theme(
    plot.title = element_markdown(family = "josefin",
                              face = "bold",
                              size = 20,
                              hjust = 0.5,
                              vjust = 65),
    
     plot.subtitle = element_text(family = "sen",
                                 size = 15,
                                 hjust = 0.5),
    
    
    axis.text.x = element_text(family = "josefin",
                               face = "bold",
                               size = 12,
                               angle = 0,
                               vjust = 0.8),
    
    axis.text.y = element_text(family = "josefin",
                               face = "bold",
                               size = 13,
                               angle = 0,
                               vjust = 0.8),
    
    axis.title.y = element_blank(),
    
    axis.title.x = element_blank(),
    
    legend.position = "none",
    
    # legend text customs 
    legend.text = element_text(family = "josefin",
                               size = 12),
    
    # match my website colors
    plot.background = element_rect(color = '#FDFBF7',
                                   fill = '#FDFBF7'),
    
    panel.background = element_rect(color = '#FDFBF7',
                                    fill = '#FDFBF7'),
    # space on the side of the plot
    plot.margin = margin(t = 1, r = 2, b = 1, l = 1, "cm")
    
    ) +
  
  coord_flip()
```

```{r fig.width=12, fig.height=8}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----                          map of houston                              ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ----          impacted areas         ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tmap_mode('plot')
#census tracts with blackouts
tm_shape(violin_data) + 
  
  tm_basemap(leaflet::providers$OpenStreetMap) + 
  
  tm_polygons(fill = "earning_group", 
              title = "Median Income ($)",
              palette = "magma",
              alpha = 0.5) +
  
  #tm_borders() +
  
  tm_title(text = "Median Income for Census Tracts With Blackouts") +
  
  tm_scalebar(position = c('left','bottom')) +
  
  tm_layout(
    
    alt.text = m_alt,
    
    main.title.fontface = "Josefin Sans",
    
    main.title.fontfamily = "josefin",
    
  )
```





